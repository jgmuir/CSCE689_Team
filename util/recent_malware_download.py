# Brandon Gathright
# Downloads recent malware samples from malware bazaar's datalake between 2 dates into a user supplied directory with the naming convention XXXX 4-digit number

import os
import sys
import requests
import shutil
import pyzipper
from datetime import date, timedelta

def main():
    # Set the directory to save the downloaded files
    output_dir = sys.argv[1]

    # Create the output directory if it doesn't exist
    if not os.path.exists(output_dir):
        os.mkdir(output_dir)
            
    # Define hard-coded constants
    headers = { 'API-KEY': '' }
    ZIP_PASSWORD = b'infected'

    start_date = date(2023, 1, 1) 
    end_date = date(2023, 4, 3)

    # Get the start index for the sample as the maximum sample number in the output directory plus 1
    idx = 0
    if len(os.listdir(output_dir)) != 0:
        idx = max([int(file.split(".")[0]) for file in os.listdir(output_dir)])+1

    delta = end_date - start_date   # returns timedelta

    for i in range(delta.days + 1):
        # Create a file variable and url request for the current day in the iteration
        day = start_date + timedelta(days=i)
        file = str(day) + ".zip"
        request = 'https://datalake.abuse.ch/malware-bazaar/daily/' + file

        # Download the file from malware bazaar
        response = requests.post(request, timeout=15, headers=headers, allow_redirects=True)

        # If the download was not successful
        if 'file_not_found' in response.text:
            print("Error: problem downloading sample " + str(file) + ", skipping.")
            continue
        else:
            # Set the path to save the downloaded file
            zip_path = os.path.join(output_dir, file)

            # Write the response content to file
            open(zip_path, 'wb').write(response.content)

            # Create a temporary directory for unzipping the file
            temp_dir = output_dir + "/" + str(day) + "/"
            if os.path.exists(temp_dir):
                shutil.rmtree(temp_dir)
            os.mkdir(temp_dir)

            # Unzip the file
            with pyzipper.AESZipFile(zip_path) as zf:
                zf.pwd = ZIP_PASSWORD
                my_secrets = zf.extractall(temp_dir)
            os.remove(zip_path)

            # Check all files in the unzipped temp directory
            for temp_file in os.listdir(temp_dir):
                # If the file is a windows executable
                if temp_file.endswith(".exe") or temp_file.endswith(".dll") or temp_file.endswith(".xll"):
                    # Set the path to save the unzipped file
                    output_path = os.path.join(output_dir, str("{0:0=4d}".format(idx)))

                    # Move the unzipped file to the output directory
                    shutil.copyfile(os.path.join(temp_dir, temp_file), output_path)
                    idx += 1
            shutil.rmtree(temp_dir)
    return

if __name__ == "__main__":
    main()